1)Given a string check if it is a palindrome or not

#include <stdio.h>
#include <string.h>
char* Reversestr(char *str)
{
    for(int i=0;i<strlen(str)/2;i++)
    {
        char temp;
        temp=str[i];
        str[i]=str[strlen(str)-1-i];
        str[strlen(str)-1-i]=temp;
    }
    return str;
}
int main() {
    char str[10],strcp[10];
    printf("enter the string\n");
    scanf("%s",str);
    strcpy(strcp,str);
    if(strcmp(strcp, Reversestr(str)) == 0)
       printf("Palindrome");
    else
       printf("Not Palindrome");
    return 0;
}

2)Given a number check the number of 1's.

#include <stdio.h>
int count(unsigned int x)
{
    int cnt=0;
    while(x!=0)
    {
        x=x>>1;
        cnt++;
    }
    return cnt;
}
int main() {
    unsigned int x;
    printf("enter the number\n");
    scanf("%u",&x);
    printf("no. of 1s is %d",count(x));
    return 0;
}

3)Given an int array check for a sequence of numbers and print all the indexes where you find them.
#include <stdio.h>
int find_sequence(int arr[],int arr_size,int seq[],int seq_size)
{
    int j,i;
    for(i=0;i<=arr_size-seq_size;i++)
    {
        for( j=0;j<seq_size;j++)
        {
            if(arr[i+j]!=seq[j])
                break;
        }
        if(j==3)
         printf("index is %d\n",i);
    }
}
int main() {
    int arr[]={1,2,3,1,2,3,4,5,1,2,6,1,2,3};
    int seq[]={1,2,3};
    int arr_size=sizeof(arr)/sizeof(arr[0]);
    int seq_size=sizeof(seq)/sizeof(seq[0]);
    find_sequence(arr,arr_size,seq,seq_size);
    //printf("Try programiz.pro");

    return 0;
}

4)Given two arrays of ints concatenate them into a single array.
#include <stdio.h>
#include <stdlib.h> 
void concatenate_arrays(int arr1[], int size1, int arr2[], int size2, int result[]) {
    for (int i = 0; i < size1; i++) {
        result[i] = arr1[i];
    }
    for (int i = 0; i < size2; i++) {
        result[size1 + i] = arr2[i];
    }
}
int main() {
    int arr1[] = {1, 2, 3};
    int arr2[] = {4, 5, 6, 7};
    int size1 = sizeof(arr1) / sizeof(arr1[0]);
    int size2 = sizeof(arr2) / sizeof(arr2[0]);
    int *result = (int*) malloc((size1 + size2) * sizeof(int));
    concatenate_arrays(arr1, size1, arr2, size2, result);
    printf("Concatenated array: ");
    for (int i = 0; i < size1 + size2; i++) {
        printf("%d ", result[i]);
    }
    printf("\n");
    free(result);
    return 0;
}

5)Given a number test if it is a power of 2 or not using bitwise operators.
#include <stdio.h>
int is_power_of_two(int n) {
    return (n > 0) && ((n & (n - 1)) == 0);
}
int main() {
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    if (is_power_of_two(num)) {
        printf("%d is a power of 2.\n", num);
    } else {
        printf("%d is not a power of 2.\n", num);
    }
    return 0;
}

6)Write a function to convert decimal to hexadecimal number.
#include <stdio.h>
int main()
{
    int decimalnum, remainder;
    int i, j = 0;
    char hexadecimalnum[100];
    printf("Enter decimal number: ");
    scanf("%d", &decimalnum);
    while (decimalnum > 0)
    {
        remainder = decimalnum % 16;
        if (remainder < 10)
            hexadecimalnum[j++] = 48 + remainder;
        else
            hexadecimalnum[j++] = 55 + remainder;
        decimalnum = decimalnum / 16;
    }
    for (i = j; i >= 0; i--)

            printf("%c", hexadecimalnum[i]);
    return 0;
}

7)Write a function to convert hexadecimal to decimal number.

8)Write a program to find maximum number in an array.
#include <stdio.h>

int main() {
    int arr[]={5,8,9,10,1,19,32,88};
    int arr_size=sizeof(arr)/sizeof(arr[0]);
    int max=arr[0];
    for(int i=0;i<arr_size;i++)
    {
        if(arr[i]>max)
        {
            max=arr[i];
        }
    }
    printf("%d\n",max);

    return 0;
}
9)Write a program to sort given array in ascending order.
#include <stdio.h>

int main() {
    int arr[]={5,8,9,10,1,19,32,88,4,67};
    int arr_size=sizeof(arr)/sizeof(arr[0]);
    for(int i=0;i<arr_size;i++)
    {
        for(int j=0;j<arr_size-i;j++)
        {
            int temp;
            if(arr[j]>arr[j+1])
            {
                temp=arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=temp;
            }
        }
    }
    printf("array is ");
    for(int i=0;i<arr_size;i++)
    {
        printf("%d\t",arr[i]);
    }

    return 0;
}

10)Write a program to perform addition of 2 dimensional array.
#include <stdio.h>

int main() {
    int arr1[3][3]={ {1,2,3},
                     {5,6,7},
                     {8,9,10} };
    int arr2[3][3]={ {10,11,12},
                     {13,14,15},
                     {16,17,18} };
    int add[3][3];
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            add[i][j]=arr1[i][j]+arr2[i][j];
        }
    }
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            printf("%d\t",add[i][j]);
        }
        printf("\n");
    }
    printf("Try programiz.pro");

    return 0;
}

11)Write a program to perform subtraction of 2 dimensional array.
#include <stdio.h>

int main() {
    int arr1[3][3]={ {1,2,3},
                     {5,6,7},
                     {8,9,10} };
    int arr2[3][3]={ {10,11,12},
                     {13,14,15},
                     {16,17,18} };
    int sub[3][3];
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            sub[i][j]=arr2[i][j]-arr1[i][j];
        }
    }
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            printf("%d\t",sub[i][j]);
        }
        printf("\n");
    }
    printf("Try programiz.pro");

    return 0;
}

12)Write a program to perform multiplication of 2 dimensional array.
//Need to complete it.
13)Write a program to count number of vowels in given string.
#include <stdio.h>
#include <string.h>
int main() {
    char str[20];
    printf("enter string\n");
    scanf("%s",str);
    int count=0;
    for(int i=0;i<strlen(str);i++)
    {
        if(str[i]=='a' || str[i]=='e' || str[i]=='i' || str[i]=='o' || str[i]=='u')
          {
              count++;
          }
    }
    printf("no of vowels is %d ",count);

    return 0;
}

14)Write a program to count number of consonants in given string. 
#include <stdio.h>
#include <string.h>
int main() {
    char str[20];
    printf("enter string\n");
    scanf("%s",str);
    int count=0;
    for(int i=0;i<strlen(str);i++)
    {
        if(str[i]=='a' || str[i]=='e' || str[i]=='i' || str[i]=='o' || str[i]=='u')
          {
              count++;
          }
    }
    printf("no of consonent is %d ",strlen(str)-count);

    return 0;
}

15)Write a function to change odd and even characters of string using pointers & arrays.
 Example input -> hello output -> ehllo
#include <stdio.h>
#include <string.h>
int main() {
    char str[20];
    printf("enter string\n");
    scanf("%s",str);
    //char *p=str;
    for(int i=0;i<strlen(str);i+=2)
    {
        char temp;
        temp=str[i];
        if(str[i+1]=='\0')
          break;
        str[i]=str[i+1];
        str[i+1]=temp;
    }
    printf("strig is %s",str);

    return 0;
}

16)Write a function to reverse given string using array & pointers.
  Example :  input -> hello  output -> olleh
#include <stdio.h>
#include <string.h>
int main() {
    char str[20];
    printf("enter string\n");
    scanf("%s",str);
    char *p=str;
    for(int i=0;i<strlen(str)/2;i++)
    {
       char temp;
       temp=*(p+i);
       *(p+i)=*(p+strlen(str)-1-i);
       *(p+strlen(str)-1-i)=temp;
    }
    printf("strig is %s",str);

    return 0;
}

17)Write a function to compare 2 strings using array & pointers.
#include <stdio.h>
#include <string.h>
int main() {
    char str1[20];
    char str2[20];
    printf("enter string str1\n");
    scanf("%s",str1);
    printf("enter string str2\n");
    scanf("%s",str2);
    char *p1=str1;
    char *p2=str2;
    while(*p1 && *p2)
    {
    if(*p1!=*p2)
        break;
    else
    {
        p1++;
        p2++;
    }
    }
    if(*p1=='\0' && *p2=='\0')
      printf("strigs are equal");
    else
      printf("strings are not equal");

    return 0;
}

18)Write a function to find string length using both array and pointers.
#include <stdio.h>
#include <string.h>
int main() {
    char str1[20];
    printf("enter string str1\n");
    scanf("%s",str1);
    char *p1=str1;
    int length;
    for(int i=0;str1[i]!='\0';i++)
    {
        length++;
    }
    printf("length of string is %d ",length);
    return 0;
}

19)Write function to convert alphabets from upper to lower using both arrray & pointers.

